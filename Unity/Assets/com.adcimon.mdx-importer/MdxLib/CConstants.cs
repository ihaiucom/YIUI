using System.Globalization;
using System.Text;
using MdxLib.Primitives;

namespace MdxLib
{
	/// <summary>
	/// Contains all (global) constants.
	/// </summary>
	public static class CConstants
	{
		/// <summary>
		/// Represents an invalid ID.
		/// </summary>
		public const int InvalidId = -1;

		/// <summary>
		/// Represents an invalid index.
		/// </summary>
		public const int InvalidIndex = -1;

		/// <summary>
		/// The default model version, for WarCraft 3 models.
		/// </summary>
		public const int DefaultModelVersion = 800;

		/// <summary>
		/// The default blend time, for WarCraft 3 models.
		/// </summary>
		public const int DefaultModelBlendTime = 150;

		internal const int SizeTag = 4;

		internal const int SizeName = 80;

		internal const int SizeFileName = 260;

		internal const string HeaderName = "MdxLib";

		internal const string HeaderVersion = "1.04";

		internal const string HeaderAuthor = "Magnus Ostberg, aka Magos";

		internal const string HeaderFullName = "Generated by MdxLib v1.04 (written by Magnus Ostberg, aka Magos)";

		internal const string HeaderUrl = "http://www.magosx.com";

		internal const string HeaderDateFormat = "yyyy-MM-dd HH:mm:ss";

		internal static readonly CVector2 DefaultVector2 = new CVector2();

		internal static readonly CVector3 DefaultVector3 = new CVector3();

		internal static readonly CVector4 DefaultVector4 = new CVector4();

		internal static readonly CExtent DefaultExtent = new CExtent();

		internal static readonly CInterval DefaultInterval = new CInterval();

		internal static readonly CSegment DefaultSegment = new CSegment();

		internal static readonly CVector3 DefaultTranslation = new CVector3(0f, 0f, 0f);

		internal static readonly CVector4 DefaultRotation = new CVector4(0f, 0f, 0f, 1f);

		internal static readonly CVector3 DefaultScaling = new CVector3(1f, 1f, 1f);

		internal static readonly CVector3 DefaultColor = new CVector3(1f, 1f, 1f);

		internal static Encoding TextEncoding = Encoding.UTF8;

		internal static Encoding SimpleTextEncoding = Encoding.ASCII;

		internal static NumberFormatInfo NumberFormat = NumberFormatInfo.InvariantInfo;
	}
}
